import sys
import numpy as np
import pandas as pd
import scipy as sp
import sklearn as sk
import matplotlib as mt

from pandas.plotting import scatter_matrix
import matplotlib.pyplot as pt
from sklearn import model_selection
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC

url="C:/Users/Barira Ushshaque/Downloads/iris.data"
print(url)
names=['sepal-length','sepal-width','petal-length','petal-width','class']
dataset = pd.read_csv(url,names=names)
print(dataset.shape)
print(dataset.head(10))
print(dataset.describe())
print(dataset.groupby('class').size())

array=dataset.values
x=array[:,0:4]
y=array[:,4]
validation_size=0.20
seed=7
x_train,x_validation,y_train,y_validation=model_selection.train_test_split(x,y,test_size=validation_size,random_state=seed)


scoring='accuracy'
models=[]
models.append(("LR",LogisticRegression()))
models.append(("KNN",KNeighborsClassifier()))
models.append(("SVM",SVC()))
print(models)

results=[]
names=[]

for name,model in models:
    kfold =model_selection.KFold(n_splits=10,random_state=seed)
    cv_results=model_selection.cross_val_score(model,x_train,y_train,cv=kfold,scoring=scoring)
    names.append(name)
    msg="%s: %f (%f)" %(name,cv_results.mean(),cv_results.std())
    print(msg)

for name,model in models:
    model.fit(x_train,y_train)
    predictions=model.predict(x_validation)
    print(name)
    print(accuracy_score(y_validation,predictions))
    print(classification_report(y_validation,predictions))
